apply plugin: 'java-library'

import java.util.regex.Pattern


apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"



dependencies {
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'commons-io:commons-io:2.7'
    implementation 'org.dom4j:dom4j:2.1.3'
    implementation 'org.slf4j:slf4j-api:1.7.12'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
}


def validateString(String inputString) {

    if (inputString.endsWith("-SNAPSHOT")) {
        inputString = inputString.replace("-SNAPSHOT", "")
    }

    // 定义正则表达式模式
    def pattern = Pattern.compile("[0-9]+(\\.[0-9]+)*")

    // 匹配输入字符串与模式
    def matcher = pattern.matcher(inputString)

    // 检查是否完全匹配
    def isMatch = matcher.matches()

    if (!isMatch) {
        throw new IllegalArgumentException("The version naming does not comply with the standard: "+
                inputString + " >> If you want to release a temporary version for testing, you can " +
                "temporarily close the validateString (version) method on line 46 of the build. " +
                "gradle file under the SDK module")
    }
}


task generateSdkVersion {

// 调用验证函数
    inputs.property "version", "${version}"
    validateString(version) // 替换为您要验证的字符串

    outputs.dir "$buildDir/generated"
    doFirst {
        def versionFile = file("$buildDir/generated/com/pax/market/api/sdk/java/Version.java")
        versionFile.parentFile.mkdirs()
        versionFile.text =
                """
package com.pax.market.api.sdk.java;

public class Version {
	public static String getVersion() {
		return "${version}";
	}
}
"""
    }
}
compileJava.dependsOn generateSdkVersion
compileJava.source generateSdkVersion.outputs.files, sourceSets.main.java


sourceCompatibility = "1.8"
targetCompatibility = "1.8"

